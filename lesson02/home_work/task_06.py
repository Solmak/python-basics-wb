"""
Author: Maksim Soloviov
Date: 2022-06-16
Python version: 3.10.5

6. * Реализовать структуру данных «Товары». Она должна представлять
собой список кортежей. Каждый кортеж хранит информацию об отдельном
товаре. В кортеже должно быть два элемента — номер товара и словарь
с параметрами, то есть характеристиками товара: название, цена,
количество, единица измерения. Структуру нужно сформировать программно,
запросив все данные у пользователя.

Пример готовой структуры:

[
(1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
(2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
(3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
]
Нужно собрать аналитику о товарах. Реализовать словарь, в котором каждый
ключ — характеристика товара, например, название.
Тогда значение — список значений-характеристик, например, список
названий товаров.

Пример:
{
“название”: [“компьютер”, “принтер”, “сканер”],
“цена”: [20000, 6000, 2000],
“количество”: [5, 2, 7],
“ед”: [“шт.”]
}
"""


def input_check(msg: str,
                input_type: type = str,
                err_msg: str = 'Неверное значение, повторите ввод',
                negative: bool = False,
                empty: bool = False) -> any:
    """Ввод и проверка

    Выбивает из пользователя правильный ввод, как коллектор долги.
    Преобразует к указанному типу и возвращает уже полученное
    и преобразованное.

    Args:
        msg (str): Строка приглашения при вводе
        input_type (type, optional): Тип вводимых данных.
            Defaults to str
        err_msg (str, optional): Сообщение об ошибке ввода.
            Defaults to 'Неверное значение, повторите ввод'
        negative (bool, optional): Допустимость отрицательных значений
            для числовых типов. Defaults to False.
        empty (bool, optional): Допустимость пустых значений, при True
            для str возвращает пустую строку, для остальных - None.
            Defaults to False.

    Returns:
        any: Преобразованный и проверенный ввод.
    """
    while True:
        user_input = input(msg)
        if not user_input and empty:
            return '' if input_type is str else None
        try:
            value = input_type(user_input)
            if input_type in [int, float] and not negative and value < 0:
                raise ValueError
            break
        except ValueError:
            print(err_msg)
    return value


goods = []
num = 1

goods_name = None
while goods_name != '':
    # Название - проверяем на пустое - выход из цикла ввода товаров
    goods_name = input(f'Введите название товара № {num}: ')
    if not goods_name:
        continue
    # Цена - проверка на float
    goods_price = input_check('Введите цену товара: ', float)
    goods_quantity = input_check('Введите количество товара: ', int)
    goods_unit = input_check('Введите единицу измерения товара: ',
                             str,
                             err_msg='Единица измерения не может быть пустой.')
    # Все ввели корректно, формируем кортеж и добавляем его в список
    goods.append((num, {
        "название": goods_name,
        "цена": goods_price,
        "количество": goods_quantity,
        "ед": goods_unit
    }))
    num += 1

print(f"Товаров введено: {num - 1}")

# Собираем аналитику
goods_analysis = {"название": [], "цена": [], "количество": [], "ед": []}
for item in goods:
    goods_analysis["название"].append(item[1]["название"])
    goods_analysis["цена"].append(item[1]["цена"])
    goods_analysis["количество"].append(item[1]["количество"])
    goods_analysis["ед"].append(item[1]["ед"])

# Печатаем аналитику. В одну строку нечитаемо и длинно
print("Аналитика товаров:",
      f"Названия товаров: {goods_analysis['название']}",
      f"Цены товаров: {goods_analysis['цена']}",
      f"Количество товаров: {goods_analysis['количество']}",
      f"Единицы измерений: {set(goods_analysis['ед'])}",
      sep='\n')
